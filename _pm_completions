#compdef pm

_pm() {
    local state

    _arguments \
        '*: :_default' \
        '-e+: :->e_option' \
        '-s+: :->s_option' \
        '-t+: :->t_option'

    case $state in
        e_option)
            # Dynamically fetch the list of options from the Go binary
            local -a dynamic_options
            # Capture the output of the Go binary and store it in an array
            dynamic_options=("${(@f)$(pm epics "$words[CURRENT]")}")

            # Use compadd to add these dynamic options to the completion
            compadd -M 'r:|=*' -- "${dynamic_options[@]}"
            ;;
        s_option)
            # Dynamically fetch the list of options for -s
            local -a dynamic_options_s
            dynamic_options_s=("${(@f)$(pm story "$words[CURRENT]")}")
            compadd -M 'r:|=*' -- "${dynamic_options_s[@]}"
            ;;
        t_option)
            # Dynamically fetch the list of options for -t
            local -a dynamic_options_t
            dynamic_options_t=("${(@f)$(pm task "$words[CURRENT]")}")
            compadd -M 'r:|=*' -- "${dynamic_options_t[@]}"
            ;;
    esac
}

compdef _pm pm
